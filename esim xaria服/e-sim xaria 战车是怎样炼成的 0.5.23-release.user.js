// ==UserScript==
// @name         e-sim xaria 战车是怎样炼成的
// @namespace    ESX
// @version      0.5.23
// @description  xaria服自动双击、自动清空体力，自动清空体力功能需要在战场页才能触发
// @author       Exsper
// @match        https://alpha.e-sim.org/*
// @match        https://pandoria.e-sim.org/*
// @match        https://furia.e-sim.org/*
// @require      http://cdn.e-sim.org/js/jquery-1.8.3.min.js
// @grant        GM_addStyle
// @run-at       document-start
// ==/UserScript==

//敬请牢记：如果您安装或使用本插件，就默认您已经承诺：不与任何人在任何场合分享插件的全部或部分内容；不在插件开发群以外的地方讨论插件相关问题或功能；在游戏截图前首先关闭所有插件再截图
//敬请牢记：如果您违背了您的承诺，您将失去所有esim插件未来版本的使用权并可能受到诸多方面的惩罚

//前排提醒：该插件有些特殊功能需要先开启e-sim助手（获取盟友、显示伤害），但如果不需要这些功能也可以脱离e-sim助手独立运行
//前排提醒：在自动寻找战场时，插件不会优先选择盟友场或是重要战场，而是寻找到能打的战场就立即跳转


var s_Running=true;var s_EnableWorkTrain=true;var s_EnableAutoFight=true;var s_IsWorkingTraining=false;var s_ErrorRefreshedCount=0;var s_WaitForLoadCount=0;var s_MaxWaitForLoadCount=50;var s_FlightTicketQuality=1;var s_FightWeaponQuality=0;var s_FightDefaultSide=0;var s_AWT_BackToRegion=true;var s_AWT_OriginRegionId=-1;var s_AWT_BackToBattle=true;var s_AWT_OriginBattleUrl;var s_AF_FightForAlly=true;var s_AF_Allies=["China","Taiwan"];var s_AF_Enemies=[];var s_AF_EHAllies=true;var s_AF_EHEnemies=true;var s_AF_EHCoalition=true;var s_AF_AutoSearchBattle=true;var s_AF_SearchBattleFromButton=true;var s_AF_SearchBattleUrl="battles.html?countryId=-1&sorting=BY_TOTAL_DAMAGE";var s_AF_AutoFlyToBattle=true;var s_AF_SearchBattleShuffle=true;var s_AF_SearchBattleOneSide=true;var s_AF_SearchBattleTwoSide=true;var s_AF_MaxWarningCounts=4;var s_AF_FightWaitMin=600;var s_AF_FightWaitMax=3000;var s_AF_FightByHitOnly=false;var s_AF_NextRefreshExtendWaitMin=20;var s_AF_NextRefreshExtendWaitMax=240;var s_AF_TournamentMode=false;var s_AF_SleepProbability=20;var s_AF_CancelDateTime=-1;var s_AFC_TargetBattleID=-1;var s_AFC_BattleTimeLeftTigger=10;var s_AFC_TiggerProbability=50;var s_AFC_RefreshInTimeLeftMax=20;var s_AFC_RefreshInTimeLeftMin=5;var s_AFC_FightWeaponQuality=0;var s_AFC_FightByHitOnly=false;var s_AFC_FightWaitMin=400;var s_AFC_FightWaitMax=800;var s_AFC_SearchBattleRetryInterval=10*60;var s_AF_HitUsingWeapon=0;var s_AF_MaxHitUsingWeapon=-1;var s_AF_AjaxTimeout=5*1000;var s_ShowMessageDelay=10000;$.info=function(){var b,c,e,g,f,d,a;if(arguments.length==1){f=arguments[0];d=s_ShowMessageDelay}else{if(arguments.length==2){f=arguments[0];d=arguments[1]}else{return}}b=$("#ESXMessageDiv");b.css({display:"block"}).append('<div class="esxmsg">'+f+"</div>");g=b.children("div");e=g.eq(-1);if(g.length>10){g.eq(0).mouseenter()}a=e.width();e.css({left:-a,opacity:0}).animate({left:0,opacity:1},200,function(){return e.delay(d).animate({left:-a,opacity:0},200,function(){e.remove()})});return g.eq(-1)};function arrayTrim(c){var a=[];for(var b=0;b<c.length;b++){a.push(c[b].replace(/(^\s*)|(\s*$)/g,""))}return a}function setArrayValue(b,c,a){b="ESX-"+b;if(a===true){localStorage.setItem(b,JSON.stringify(arrayTrim(c.split(","))))}else{localStorage.setItem(b,JSON.stringify(c))}}function getArrayValue(b,a){b="ESX-"+b;if(a===true){return(b in localStorage)?JSON.parse(localStorage.getItem(b)).join(","):null}else{return(b in localStorage)?JSON.parse(localStorage.getItem(b)):null}}function setValue(a,b){localStorage["ESX-"+a]=b}function getValue(a){a="ESX-"+a;return(a in localStorage)?localStorage[a]:null}function removeValue(a){a="ESX-"+a;localStorage.removeItem(a)}function loadStorage(b,a){var c=getValue(b);if(c==null){return a}else{if(typeof a=="string"){return c}else{if(typeof a=="number"){return parseInt(c)}else{if(typeof a=="boolean"){return(c=="true")}else{return c}}}}}main();setTimeout(function(){location.reload()},30*60*1000);function getRandomInt(d,a){var c=a-d;var b=Math.random()*c+d;b=parseInt(b,10);return b}function getDateString(f){var c=f.getHours();var e=f.getMinutes();var b=f.getSeconds();var a="";if(c<10){a+="0"}a+=c+":";if(e<10){a+="0"}a+=e+":";if(b<10){a+="0"}a+=b;return(a)}function getAlliesFromEH(e){if($("#Eh2Homeland").length>0){s_AF_Allies=[];s_AF_Allies.push($("#Eh2Homeland").children("div").attr("title"));if(getValue("EHAllies")=="true"){var d=$("#Eh2Allies").children("div");for(var c=0;c<d.length;c++){s_AF_Allies.push(d[c].title)}}if(getValue("EHCoalition")=="true"){var b=$("#Eh2CoalitionMembers").children("div");for(var a=0;a<b.length;a++){s_AF_Allies.push(b[a].title)}}s_AF_Allies=$.unique(s_AF_Allies.sort());setArrayValue("Allies",s_AF_Allies);e.val(s_AF_Allies.join(","));ShowMessage("获取到盟友："+s_AF_Allies)}else{ShowMessage("e-sim助手未运行或版本不兼容")}}function getEnemiesFromEH(c){if($("#Eh2Homeland").length>0){s_AF_Enemies=[];if(getValue("EHEnemies")=="true"){var b=$("#Eh2Enemies").children("div");for(var a=0;a<b.length;a++){s_AF_Enemies.push(b[a].title)}}setArrayValue("Enemies",s_AF_Enemies);c.val(s_AF_Enemies.join(","));ShowMessage("获取到敌人："+s_AF_Enemies)}else{ShowMessage("e-sim助手未运行或版本不兼容")}}function loadRecord(){s_Running=loadStorage("IsRunning",s_Running);s_EnableWorkTrain=loadStorage("EnableWorkTrain",s_EnableWorkTrain);s_EnableAutoFight=loadStorage("EnableAutoFight",s_EnableAutoFight);s_IsWorkingTraining=loadStorage("IsWorkingTraining",s_IsWorkingTraining);s_FlightTicketQuality=loadStorage("FlightTicketQuality",s_FlightTicketQuality);s_ErrorRefreshedCount=loadStorage("ErrorRefreshedCount",s_ErrorRefreshedCount);s_AWT_BackToRegion=loadStorage("BackToRegion",s_AWT_BackToRegion);s_AWT_OriginRegionId=loadStorage("OriginRegionId",s_AWT_OriginRegionId);s_AWT_BackToBattle=loadStorage("BackToBattle",s_AWT_BackToBattle);s_AWT_OriginBattleUrl=loadStorage("OriginBattleUrl",s_AWT_OriginBattleUrl);s_AF_FightForAlly=loadStorage("FightForAlly",s_AF_FightForAlly);s_AF_Allies=getArrayValue("Allies");s_AF_Enemies=getArrayValue("Enemies");s_AF_EHAllies=loadStorage("EHAllies",s_AF_EHAllies);s_AF_EHEnemies=loadStorage("EHEnemies",s_AF_EHEnemies);s_AF_EHCoalition=loadStorage("EHCoalition",s_AF_EHCoalition);s_FightWeaponQuality=loadStorage("FightWeaponQuality",s_FightWeaponQuality);s_AF_FightWaitMin=loadStorage("FightWaitMin",s_AF_FightWaitMin);s_AF_FightWaitMax=loadStorage("FightWaitMax",s_AF_FightWaitMax);s_AF_NextRefreshExtendWaitMin=loadStorage("NextRefreshExtendWaitMin",s_AF_NextRefreshExtendWaitMin);s_AF_NextRefreshExtendWaitMax=loadStorage("NextRefreshExtendWaitMax",s_AF_NextRefreshExtendWaitMax);s_AF_SleepProbability=loadStorage("SleepProbability",s_AF_SleepProbability);s_AF_CancelDateTime=loadStorage("CancelDateTime",s_AF_CancelDateTime);s_AFC_TiggerProbability=loadStorage("AFCTiggerProbability",s_AFC_TiggerProbability);s_AFC_RefreshInTimeLeftMax=loadStorage("AFCRefreshInTimeLeftMax",s_AFC_RefreshInTimeLeftMax);s_AFC_RefreshInTimeLeftMin=loadStorage("AFCRefreshInTimeLeftMin",s_AFC_RefreshInTimeLeftMin);s_AFC_TargetBattleID=loadStorage("AFCTargetBattleID",s_AFC_TargetBattleID);s_AFC_FightWeaponQuality=loadStorage("AFCFightWeaponQuality",s_AFC_FightWeaponQuality);s_AFC_FightByHitOnly=loadStorage("AFCFightByHitOnly",s_AFC_FightByHitOnly);s_AFC_FightWaitMin=loadStorage("AFCFightWaitMin",s_AFC_FightWaitMin);s_AFC_FightWaitMax=loadStorage("AFCFightWaitMax",s_AFC_FightWaitMax);s_AF_FightByHitOnly=loadStorage("FightByHitOnly",s_AF_FightByHitOnly);s_AF_HitUsingWeapon=loadStorage("HitUsingWeapon",s_AF_HitUsingWeapon);s_AF_MaxHitUsingWeapon=loadStorage("MaxHitUsingWeapon",s_AF_MaxHitUsingWeapon);s_FightDefaultSide=loadStorage("FightDefaultSide",s_FightDefaultSide);s_AF_AutoSearchBattle=loadStorage("AutoSearchBattle",s_AF_AutoSearchBattle);s_AF_SearchBattleFromButton=loadStorage("SearchBattleFromButton",s_AF_SearchBattleFromButton);s_AF_SearchBattleUrl=loadStorage("SearchBattleUrl",s_AF_SearchBattleUrl);s_AF_AutoFlyToBattle=loadStorage("AutoFlyToBattle",s_AF_AutoFlyToBattle);s_AF_SearchBattleShuffle=loadStorage("SearchBattleShuffle",s_AF_SearchBattleShuffle);s_AF_AjaxTimeout=loadStorage("AjaxTimeout",s_AF_AjaxTimeout);s_AF_TournamentMode=loadStorage("TournamentMode",s_AF_TournamentMode)}function ResetRecord(){removeValue("IsRunning");removeValue("EnableWorkTrain");removeValue("EnableAutoFight");removeValue("IsWorkingTraining");removeValue("FlightTicketQuality");removeValue("ErrorRefreshedCount");removeValue("BackToRegion");removeValue("OriginRegionId");removeValue("BackToBattle");removeValue("OriginBattleUrl");removeValue("FightForAlly");removeValue("Allies");removeValue("Enemies");removeValue("EHAllies");removeValue("EHEnemies");removeValue("EHCoalition");removeValue("FightWeaponQuality");removeValue("FightWaitMin");removeValue("FightWaitMax");removeValue("NextRefreshExtendWaitMin");removeValue("NextRefreshExtendWaitMax");removeValue("SleepProbability");removeValue("CancelDateTime");removeValue("AFCTiggerProbability");removeValue("AFCRefreshInTimeLeftMax");removeValue("AFCRefreshInTimeLeftMin");removeValue("AFCTargetBattleID");removeValue("AFCFightWeaponQuality");removeValue("AFCFightByHitOnly");removeValue("AFCFightWaitMin");removeValue("AFCFightWaitMax");removeValue("FightByHitOnly");removeValue("HitUsingWeapon");removeValue("MaxHitUsingWeapon");removeValue("FightDefaultSide");removeValue("AutoSearchBattle");removeValue("SearchBattleFromButton");removeValue("SearchBattleUrl");removeValue("AutoFlyToBattle");removeValue("SearchBattleShuffle");removeValue("AjaxTimeout");removeValue("TournamentMode")}function addIcon(){function i(E,D,z,A,y){var C=$("<input>",{type:"checkbox",style:"vertical-align:5px;",id:D});var B=$("<label>",{"class":"checkboxlabel","for":D,text:z});var a=getValue(A);if(a===null){setValue(A,y);C.attr("checked",y==true)}else{C.attr("checked",a=="true")}E.append(C,B);C.click(function(){if(C.is(":checked")){setValue(A,true)}else{setValue(A,false)}})}function d(C,G,D,a,y,E){var A=$("<span>",{style:"padding:3px; margin:3px",text:G});var B=$("<select>",{style:"padding:3px; margin:3px"}).appendTo(A);for(var z=0;z<D.length;z++){$("<option>",{value:D[z],text:a[z]}).appendTo(B)}var F=getValue(y);if(F===null){setValue(y,E);B.val(E)}else{B.val(F)}C.append(A);B.change(function(){setValue(y,B.val())})}function m(B,A,z,y){var C=$("<input>",{type:"text",id:"ESX-"+z,style:"vertical-align:5px;width:"+A+"px;height:20px;"}).appendTo(B);var a=getValue(z);if(a===null){setValue(z,y);C.val(y)}else{C.val(a)}B.append(C);C.focus(function(){C.css("background-color","#FFFFFF")});C.blur(function(){if(C.val()===""){C.val(y)}C.css("background-color","#79FF79");setValue(z,C.val())})}function q(B,A,z,y){var C=$("<input>",{type:"text",id:"ESX-"+z,style:"vertical-align:5px;width:"+A+"px;height:20px;"}).appendTo(B);var a=getArrayValue(z,true);if(a===null){setArrayValue(z,y);C.val(y.join(","))}else{C.val(a)}B.append(C);C.focus(function(){C.css("background-color","#FFFFFF")});C.blur(function(){if(C.val()===""){C.val(y.join(","))}C.css("background-color","#79FF79");setArrayValue(z,C.val(),true)})}var j=$("<li>",{id:"ESXIcon"}).insertBefore($("#userAvatar"));var v=$("<a>",{"data-dropdown":"ESXContentDrop",style:"padding:0 5px;",href:"#"}).appendTo(j);var x=$("<img>",{align:"absmiddle","class":"smallAvatar",style:"height:36px; width:36px;",src:"http://cdn.e-sim.org/img/eventIcons/battleLostIcon.png"}).appendTo(v);var n=$("#contentDrop").clone().attr("id","ESXContentDrop").empty().insertBefore($("#contentDrop"));n.removeClass("medium");n.addClass("large");$("<b>",{text:"xaria 战车是怎样炼成的 "+GM_info.script.version}).appendTo(n);var h=$("<span>",{text:"捐赠",style:"float:right;"}).appendTo(n);h.click(function(){p()});function p(){var y=$("<div>",{"class":"dwindow",style:"overflow:auto; width:300px; height:380px; display:block; position:fixed; top:50%; left:50%; margin-left: -225px; margin-top: -150px; padding-bottom: 20px; text-align:center;background-color:lightgray;"}).appendTo($("body"));$("<p>e-sim插件开发不易，您的无私奉献是我们努力的肯定与支持，让我们做得更好</p>").appendTo(y);$("<p>QQ钱包</p>").appendTo(y);var z=$("<div></div>").appendTo(y);z[0].innerHTML='<img src="https://puu.sh/Ad7wr/10f301077b.png"/>';$("<br>").appendTo(y);var a=$("<button>",{text:"关闭"}).appendTo(y);a.click(function(){y.remove()})}$("<div>",{style:"text-align:center;",text:"自动清空体力、自动双击。珍惜账号，慎用自动。设置更改刷新后生效。"}).appendTo(n);var s=$("<div>",{style:"height:500px; overflow:auto;"}).appendTo(n);var r=$("<table>",{id:"ESXConfig",style:"width:100%;line-height:30px"}).appendTo(s);var c=$("<tr>",{style:"background-color:DarkSlateGray;"}).appendTo(r);var g=$("<td>").appendTo(c);i(g,"IsRunCheckbox","启用该插件","IsRunning",s_Running);i(g,"EnableWorkTrainCheckbox","启用双击功能","EnableWorkTrain",s_EnableWorkTrain);i(g,"EnableAutoFightCheckbox","启用打枪功能","EnableAutoFight",s_EnableAutoFight);c=$("<tr>",{style:"background-color:DarkSlateGray;"}).appendTo(r);g=$("<td>").appendTo(c);i(g,"TournamentModeCheckbox","杯赛模式","TournamentMode",s_AF_TournamentMode);c=$("<tr>",{style:"background-color:DarkSlateGray;"}).appendTo(r);g=$("<td>").appendTo(c);d(g,"输出使用武器：",[0,1,2,3,4,5],["拳头","Q1","Q2","Q3","Q4","Q5"],"FightWeaponQuality",s_FightWeaponQuality);i(g,"FightByHitOnlyCheckbox","不使用连击","FightByHitOnly",s_AF_FightByHitOnly);d(g,"超出次数则使用空手：",[-1,0,1,2,3,4,5,6,7,8,9,10],["不限制","0","1","2","3","4","5","6","7","8","9","10"],"MaxHitUsingWeapon",s_AF_MaxHitUsingWeapon);c=$("<tr>",{style:"background-color:DarkSlateGray;"}).appendTo(r);g=$("<td>").appendTo(c);d(g,"可以打两边时选择输出方：",[-1,0,1,2,3,4,5,6],["随机","防守方","进攻方","尽量拿到top1","尽量拿到top3","尽量拿到top10","随机但尽量打在一边","打在胜场较少的那一边"],"FightDefaultSide",s_FightDefaultSide);i(g,"FightForAllyCheckbox","起义场优先打盟友方或对抗敌方","FightForAlly",s_AF_FightForAlly);c=$("<tr>",{style:"background-color:DarkSlateGray;"}).appendTo(r);g=$("<td>").appendTo(c);$("<span>",{text:"设置盟友（以半角逗号分隔）："}).appendTo(g);q(g,400,"Allies",s_AF_Allies);c=$("<tr>",{style:"background-color:DarkSlateGray;"}).appendTo(r);g=$("<td>").appendTo(c);$("<span>",{text:"设置敌国（以半角逗号分隔）："}).appendTo(g);q(g,400,"Enemies",s_AF_Enemies);c=$("<tr>",{style:"background-color:DarkSlateGray;"}).appendTo(r);g=$("<td>").appendTo(c);var w=$("<button>",{text:"从E-sim助手获取盟友和敌国"}).appendTo(g);w.click(function(){getAlliesFromEH($("#ESX-Allies"));getEnemiesFromEH($("#ESX-Enemies"))});i(g,"EHAlliesCheckbox","获取盟友","EHAllies",s_AF_EHAllies);i(g,"EHCoalitionCheckbox","获取联盟成员国","EHCoalition",s_AF_EHCoalition);i(g,"EHEnemiesCheckbox","获取敌国","EHEnemies",s_AF_EHEnemies);c=$("<tr>",{style:"background-color:DarkSlateGray;"}).appendTo(r);g=$("<td>").appendTo(c);$("<span>每次攻击间隔（毫秒）：</span>").appendTo(g);m(g,60,"FightWaitMin",s_AF_FightWaitMin);$("<span> 到 </span>").appendTo(g);m(g,60,"FightWaitMax",s_AF_FightWaitMax);$("<span>打枪请求超时限制：</span>").appendTo(g);m(g,60,"AjaxTimeout",s_AF_AjaxTimeout);$("<span>毫秒</span>").appendTo(g);var l=$("<button>",{text:"Ping一下"}).appendTo(g);l.click(function(){$.ping=function(z){var B,y,A;$.ajax({url:z.url,type:"GET",dataType:"html",timeout:20000,beforeSend:function(){if(z.beforePing){z.beforePing()}y=new Date().getTime()},complete:function(){A=new Date().getTime();B=Math.abs(y-A);if(z.afterPing){z.afterPing(B)}},error:function(C,E,D){if(E=="timeout"){ShowMessage("Ping超时")}A=new Date().getTime();B=Math.abs(y-A);if(z.afterPing){z.afterPing(B)}}});if(z.interval&&z.interval>0){var a=z.interval*1000;setTimeout(function(){$.ping(z)},a)}};$.ping({url:location.origin,afterPing:function(a){ShowMessage("延迟： "+a+" 毫秒")}})});c=$("<tr>",{style:"background-color:DarkSlateGray;"}).appendTo(r);g=$("<td>").appendTo(c);$("<span>清空体力后下次刷新额外延时（秒）：</span>").appendTo(g);m(g,60,"NextRefreshExtendWaitMin",s_AF_NextRefreshExtendWaitMin);$("<span> 到 </span>").appendTo(g);m(g,60,"NextRefreshExtendWaitMax",s_AF_NextRefreshExtendWaitMax);c=$("<tr>",{style:"background-color:DarkSlateGray;"}).appendTo(r);g=$("<td>").appendTo(c);$("<span>每次刷新后均有</span>").appendTo(g);m(g,60,"SleepProbability",s_AF_SleepProbability);$("<span>%的概率不进行自动清体</span>").appendTo(g);c=$("<tr>",{style:"background-color:DarkSlateGray;"}).appendTo(r);g=$("<td>").appendTo(c);$("<span>于</span>").appendTo(g);m(g,60,"CancelDateTimeTextbox",60);$("<span>分钟后停止自动清体功能</span>").appendTo(g);var b=$("<button>",{text:"设置"}).appendTo(g);b.click(function(){s_AF_CancelDateTime=Date.now()+parseInt($("#ESX-CancelDateTimeTextbox").val())*60*1000;setValue("CancelDateTime",s_AF_CancelDateTime);ShowMessage("设置在"+getDateString(new Date(s_AF_CancelDateTime))+"停止自动清体功能")});var e=$("<button>",{text:"清除"}).appendTo(g);e.click(function(){s_AF_CancelDateTime=-1;setValue("CancelDateTime",s_AF_CancelDateTime);ShowMessage("已清除设定的停止清体时间")});c=$("<tr>",{style:"background-color:DarkSlateGray;"}).appendTo(r);g=$("<td>").appendTo(c);$("<span>重要战场回合剩余时间小于"+s_AFC_BattleTimeLeftTigger+"分钟，则有</span>").appendTo(g);m(g,20,"AFCTiggerProbability",s_AFC_TiggerProbability);$("<span>%的概率在回合结束前S</span>").appendTo(g);m(g,20,"AFCRefreshInTimeLeftMax",s_AFC_RefreshInTimeLeftMax);$("<span>到S</span>").appendTo(g);m(g,20,"AFCRefreshInTimeLeftMin",s_AFC_RefreshInTimeLeftMin);$("<span>之间（压秒）</span><br/>").appendTo(g);$("<span>每次攻击间隔（毫秒）：</span>").appendTo(g);m(g,60,"AFCFightWaitMin",s_AFC_FightWaitMin);$("<span> 到 </span>").appendTo(g);m(g,60,"AFCFightWaitMax",s_AFC_FightWaitMax);d(g,"使用武器：",[0,1,2,3,4,5],["拳头","Q1","Q2","Q3","Q4","Q5"],"AFCFightWeaponQuality",s_AFC_FightWeaponQuality);i(g,"AFCFightByHitOnlyCheckbox","不使用连击","AFCFightByHitOnly",s_AFC_FightByHitOnly);$("<br/>").appendTo(g);var k=$("<button>",{text:"设置当前战场为重要战场"}).appendTo(g);k.click(function(){s_AFC_TargetBattleID=parseInt($('a[href^="battleStatistics.html?id="]').attr("href").replace("battleStatistics.html?id=",""));setValue("AFCTargetBattleID",s_AFC_TargetBattleID);ShowMessage("设置战场 "+s_AFC_TargetBattleID+" 为重要战场")});var f=$("<button>",{text:"清除重要战场"}).appendTo(g);f.click(function(){s_AFC_TargetBattleID=-1;setValue("AFCTargetBattleID",s_AFC_TargetBattleID);ShowMessage("已清除记录的重要战场")});c=$("<tr>",{style:"background-color:DarkSlateGray;"}).appendTo(r);g=$("<td>").appendTo(c);d(g,"工作飞行使用机票：",[1,2,3,4,5],["Q1","Q2","Q3","Q4","Q5"],"FlightTicketQuality",s_FlightTicketQuality);i(g,"BackToRegionCheckbox","双击后飞回原所在地（请确保机票足够）","BackToRegion",s_AWT_BackToRegion);i(g,"BackToBattleCheckbox","双击后回到原战场","BackToBattle",s_AWT_BackToBattle);c=$("<tr>",{style:"background-color:DarkSlateGray;"}).appendTo(r);g=$("<td>").appendTo(c);i(g,"AutoSearchBattleCheckbox","战场页没有输出按钮时自动寻找第一个可输出战场","AutoSearchBattle",s_AF_AutoSearchBattle);i(g,"AutoFlyToBattleCheckbox","如果找不到战场则飞向第一个起义战地区","AutoFlyToBattle",s_AF_AutoFlyToBattle);c=$("<tr>",{style:"background-color:DarkSlateGray;"}).appendTo(r);g=$("<td>").appendTo(c);i(g,"SearchBattleShuffleCheckbox","打乱战场列表，以避免总是选择第一个可输出战场","SearchBattleShuffle",s_AF_SearchBattleShuffle);c=$("<tr>",{style:"background-color:DarkSlateGray;"}).appendTo(r);g=$("<td>").appendTo(c);$("<span>",{text:"搜寻战场列表地址："}).appendTo(g);m(g,400,"SearchBattleUrl",s_AF_SearchBattleUrl);c=$("<tr>",{style:"background-color:DarkSlateGray;"}).appendTo(r);g=$("<td>").appendTo(c);i(g,"SearchBattleFromButtonCheckbox","优先从左侧按钮获取战场列表网址","SearchBattleFromButton",s_AF_SearchBattleFromButton);var u=$("<button>",{text:"测试搜寻战场"}).appendTo(g);u.click(function(){s_AF_SearchBattleUrl=getValue("SearchBattleUrl");searchBattle(1)});var t=$("<button>",{text:"重置双击设置",title:"如果因双击错误导致无法自动输出，请点击此按钮"}).appendTo(g);t.click(function(){removeValue("IsWorkingTraining");removeValue("OriginRegionId");removeValue("OriginBattleUrl")});var o=$("<button>",{text:"重置所有设置",title:"插件运行遇到问题？尝试重置插件吧"}).appendTo(g);o.click(function(){ResetRecord()})}function main(){s_WaitForLoadCount=parseInt(getValue("WaitForLoadCount"));if($(".time").length!==2){s_WaitForLoadCount++;if(s_WaitForLoadCount<=s_MaxWaitForLoadCount){setValue("WaitForLoadCount",s_WaitForLoadCount);console.log(s_WaitForLoadCount+":网页未加载完全，xaria插件等待1秒");setTimeout(main,1000);return}else{setValue("WaitForLoadCount",0);location.reload();return}}var b=$(".time:first").text().match(/-/g);if(b==null||b.length!=2){s_WaitForLoadCount++;if(s_WaitForLoadCount<=s_MaxWaitForLoadCount){setValue("WaitForLoadCount",s_WaitForLoadCount);console.log(s_WaitForLoadCount+":官方脚本还未执行，xaria插件等待1秒");setTimeout(main,1000);return}else{setValue("WaitForLoadCount",0);location.reload();return}}if(($("#minutesLimit").length>0&&$("#minutesLimit").text()=="")||($("#limit_timer_time_text").length>0&&$("#limit_timer_time_text").text()=="")){s_WaitForLoadCount++;if(s_WaitForLoadCount<=s_MaxWaitForLoadCount){setValue("WaitForLoadCount",s_WaitForLoadCount);console.log(s_WaitForLoadCount+":官方时间还未刷新，xaria插件等待1秒");setTimeout(main,1000);return}else{setValue("WaitForLoadCount",0);location.reload();return}}setValue("WaitForLoadCount",0);CreateMessageDiv();addIcon();loadRecord();if(s_Running==false){ShowMessage("xaria插件未启动");return}if(s_EnableWorkTrain==true){if((s_AWT_BackToRegion==true)&&(getUrlPage()=="battle")){var c=$('a[href^="region.html?id="][href!="region.html?id="]');var a=parseInt(c.first().attr("href").split("=")[1]);setValue("OriginRegionId",a)}if((s_AWT_BackToBattle==true)&&(getUrlPage()=="battle")){setValue("OriginBattleUrl",location.href)}autoWorkTrain()}if((s_EnableAutoFight==true)&&(getUrlPage()=="battle")){setTimeout(function(){autoFight()},2000);return}}function CreateMessageDiv(){GM_addStyle(".esxmsg{background-color: #fff;border-left: 4px solid #7ad03a;-webkit-box-shadow: 0 1px 1px 0 rgba(0,0,0,.1);}");var a=$("<div>",{id:"ESXMessageDiv",style:"position:fixed; bottom:5%;"}).appendTo("body")}function ShowMessage(a,b){console.log(a);if(b==undefined){$.info(a)}else{$.info(a,b)}}function getUrlPage(){if(document.URL.search("html")!=-1){return document.URL.match("/([a-zA-Z0-9]+).html")[1]}else{return"index"}}function autoWorkTrain(){function b(){var h=$("#trainButton");if(h.length<=0){s_EnableWorkTrain=false;setValue("EnableWorkTrain",false);s_IsWorkingTraining=false;setValue("IsWorkingTraining",false);alert("错误：未训练却没有训练按钮，已自动关闭双击功能")}else{i()}function i(){$.ajax({type:"POST",url:"train/ajax",data:null,success:function(k){var j=$("#trainButton",k);if((j.length<1)&&($("#userMenu",k).length<1)){c()}else{s_EnableWorkTrain=false;setValue("EnableWorkTrain",false);s_IsWorkingTraining=false;setValue("IsWorkingTraining",false);alert("错误：训练失败，已自动关闭双击功能")}$("#trainReload").html(k)}})}}function e(){var k=$("#workButton");if(k.length<1){s_EnableWorkTrain=false;setValue("EnableWorkTrain",false);s_IsWorkingTraining=false;setValue("IsWorkingTraining",false);alert("错误：未工作却没有工作按钮，已自动关闭双击功能")}else{var l=$('a[href^="region.html?id="][href!="region.html?id="]');var i=l.first().parent().find("div").attr("class");i=i.substring(i.indexOf("-")+1);var h=l.last().parent().find("div").attr("class");h=h.substring(h.indexOf("-")+1);if(i==h){j()}else{document.location=l.last().attr("href")}}function j(){$.ajax({type:"POST",url:"work/ajax?action=work",data:null,success:function(m){var n=$("#workButton",m);if((n.length<1)&&($("#userMenu",m).length<1)){document.location="/train.html"}else{s_EnableWorkTrain=false;setValue("EnableWorkTrain",false);s_IsWorkingTraining=false;setValue("IsWorkingTraining",false);alert("错误：工作失败，已自动关闭双击功能")}$("#workReload").html(m)},error:function(){$.ajax({type:"POST",url:"work/ajaxSideBarWork",data:null,success:function(n){var m=$("#taskButtonWork",n);if(m.length<1){document.location="/train.html"}else{s_EnableWorkTrain=false;setValue("EnableWorkTrain",false);s_IsWorkingTraining=false;setValue("IsWorkingTraining",false);alert("错误：工作失败，已自动关闭双击功能")}$("#dailyTaskSection").html(n)}})}})}}function a(){$("#ticketQuality").val(s_FlightTicketQuality);var h=$(".travel.button.foundation-style");h[0].click()}function f(){var h=$(".testDivred");if(h.length>0){s_EnableWorkTrain=false;setValue("EnableWorkTrain",false);s_IsWorkingTraining=false;setValue("IsWorkingTraining",false);alert("飞行出错："+$(".testDivred :last")[0].childNodes[1].nodeValue+"，已自动关闭双击功能")}else{document.location="/work.html"}}function g(h){s_IsWorkingTraining=true;setValue("IsWorkingTraining","true");if(h==true){setTimeout(function(){document.location="/work.html"},30*1000)}else{document.location="/work.html"}}function c(){s_IsWorkingTraining=false;setValue("IsWorkingTraining","false");if(s_AWT_BackToRegion==true){var j=$('a[href^="region.html?id="][href!="region.html?id="]');var h=parseInt(j.first().attr("href").split("=")[1]);if((s_AWT_OriginRegionId!=-1)&&(h!=s_AWT_OriginRegionId)){ShowMessage("飞回地区："+s_AWT_OriginRegionId);var i;$.ajax({url:"region.html?id="+s_AWT_OriginRegionId,async:false,success:function(k){i=parseInt($("#countryId",k).val())},error:function(k,l){console.log("地区页抓取错误 (",l,")，重新抓取");$.ajax(this)}});$.ajax({url:"travel.html",type:"POST",async:false,data:{countryId:i,regionId:s_AWT_OriginRegionId,ticketQuality:s_FlightTicketQuality},success:function(k){var l=$("div.testDivred",k);if(l.length===1){ShowMessage("飞行失败："+l.text().trim())}else{ShowMessage("飞行成功！")}},error:function(k,l){console.log("飞行错误 (",l,")")}})}}if(s_AWT_BackToBattle==true){ShowMessage("返回战场："+s_AWT_OriginBattleUrl);document.location=s_AWT_OriginBattleUrl}else{if((s_EnableAutoFight==true)&&(s_AF_AutoSearchBattle==true)){searchBattle()}else{ShowMessage("双击结束，等待下次双击")}}}function d(){if(s_IsWorkingTraining==false){if(($("#taskButtonWork").length>0)||($("#taskButtonTrain").length>0)){var j=parseFloat($("#actualHealth").html());var h=50-s_FlightTicketQuality*10;if(s_AWT_BackToRegion==true){if((j-h*2)>=0){g(false);return}else{ShowMessage("可能由于人工操作，你当前的体力不足以飞行两次，程序将于30秒后再自动双击，请尽快补充体力");g(true);return}}else{if((j-h)>=0){g(false);return}else{ShowMessage("可能由于人工操作，你当前的体力不足以飞行到工作地，程序将于30秒后再自动双击，请尽快补充体力");g(true);return}}}}else{var i=getUrlPage();if(i=="work"){e()}else{if(i=="train"){b()}else{if(i=="region"){a()}else{if(i=="travel"){f()}else{setValue("IsWorkingTraining",false);return}}}}}}d()}function refreshingWhenCrashed(){if(s_EnableAutoFight==true){s_EnableAutoFight=false;if(s_ErrorRefreshedCount<=0){s_ErrorRefreshedCount++;setValue("ErrorRefreshedCount",s_ErrorRefreshedCount);location.reload()}else{s_ErrorRefreshedCount++;setValue("ErrorRefreshedCount",s_ErrorRefreshedCount);var a=(s_ErrorRefreshedCount-1)*30;ShowMessage("自动攻击出错，"+a+"秒后自动刷新",1000000);setTimeout(function(){location.reload()},a*1000)}}}function searchBattle(){function f(l){var k=false;$.ajax({url:l,async:false,success:function(m){if($(".time",m).length!==2){console.log(citizenId,"抓取错误，重新抓取");$.ajax(this);return}if($(".testDivred",m).length>0){k=false}else{if($("#fightButton2",m).length>0){if(s_AF_SearchBattleTwoSide==true){k=true}else{k=false}}else{if($("#fightButton1",m).length>0){if(s_AF_SearchBattleOneSide==true){k=true}else{k=false}}else{k=false}}}},error:function(m,n){console.log("抓取错误 (",n,")，重新抓取");$.ajax(this)}});return k}function j(m){var k=false;var l=0;var o=0;var n=$("form[action='travel.html']",m);if(n.length>0){l=parseInt(n.children("#countryId").val());o=parseInt(n.children("#regionId").val());if((l>0)&&(o>0)){$.ajax({url:"travel.html",type:"POST",async:false,data:{countryId:l,regionId:o,ticketQuality:s_FlightTicketQuality},success:function(p){var q=$("div.testDivred",p);if(q.length===1){ShowMessage("飞行失败："+q.text().trim())}else{ShowMessage("飞行成功！");k=true}},error:function(p,q){console.log("飞行错误 (",q,")")}})}return k}else{return false}}function i(l){var k=false;$.ajax({url:l,async:false,success:function(m){if($(".time",m).length!==2){console.log(citizenId,"抓取错误，重新抓取");$.ajax(this);return}k=j(m)},error:function(m,n){console.log("抓取错误 (",n,")，重新抓取");$.ajax(this)}});return k}function c(n){for(var l,k,m=n.length;m;l=parseInt(Math.random()*m),k=n[--m],n[m]=n[l],n[l]=k){}return n}function b(k){ShowMessage("寻找战场："+k);var l=[];$.ajax({url:k,async:false,success:function(m){if($(".time",m).length!==2){console.log(citizenId,"抓取错误，重新抓取");$.ajax(this);return}$("#battlesTable tr:gt(0)",m).each(function(n,p){var o=$("a[href*='battle.html']",p);if(o.length<=0){return true}else{l.push(o.attr("href"))}})},error:function(m,n){console.log("抓取错误 (",n,")，重新抓取");$.ajax(this)}});console.log("获取到的战场列表:"+l);return l}function a(){var m;if(($("#taskButtonFight").length>0)&&(s_AF_SearchBattleFromButton==true)){console.log("从左侧按钮获取战场列表");m=b($("#taskButtonFight").children().attr("href"))}else{console.log("从自定义网址获取战场列表");m=b(s_AF_SearchBattleUrl)}if(m.length<=0){return"-1"}if(s_AF_SearchBattleShuffle==true){m=c(m)}for(var k=0;k<m.length;k++){var l=f(m[k]);console.log(m[k]+":"+l);if(l==true){return m[k]}}return"-1"}function d(){var m=b(s_AF_SearchBattleUrl);if(m.length<=0){return"-1"}if(s_AF_SearchBattleShuffle==true){m=c(m)}for(var k=0;k<m.length;k++){var l=i(m[k]);console.log(m[k]+":"+l);if(l==true){return m[k]}}return"-1"}function e(){function o(r){try{var p=r.split(" ")[1];return p.substring(p.indexOf("-")+1)}catch(q){return"未知"}}var m=[];var k=[];var l=[];var n=[];$("#battlesTable tr:gt(0)").each(function(p,r){m.push($("a[href*='battle.html']",r).attr("href"));k.push(o($("div.xflagsMedium:first",r).attr("class")).replace(/-/g," "));l.push(o($("div.xflagsMedium:last",r).attr("class")).replace(/-/g," "));var s=$("span.is-countdown",r);if(s.length!==1){n.push(-1)}else{var q=s.text().split(":");if(q.length<3){n.push(0)}else{n.push(parseInt(q[0])*60*60+parseInt(q[1])*60+parseInt(q[2]))}}})}function h(){var k=a();if(k!="-1"){document.location=k}else{if(s_AF_AutoFlyToBattle==false){ShowMessage("未找到可以打的战场，"+(s_AFC_SearchBattleRetryInterval/60)+"分钟后重新寻找");setTimeout(function(){h()},s_AFC_SearchBattleRetryInterval*1000)}else{ShowMessage("未找到可以打的战场，尝试飞行到"+s_AF_SearchBattleUrl+"列表里的第一场起义战");k=d();if(k!="-1"){document.location=k}else{ShowMessage("未找到可以飞的起义战，"+(s_AFC_SearchBattleRetryInterval/60)+"分钟后重新寻找");setTimeout(function(){h()},s_AFC_SearchBattleRetryInterval*1000)}}}}if(s_AF_AutoSearchBattle==true){if(arguments.length>=1){var g=arguments[0];ShowMessage(g+"秒后开始寻找可以输出的战场");setTimeout(function(){h()},g*1000)}else{ShowMessage("30秒后开始寻找可以输出的战场");setTimeout(function(){h()},30*1000)}}else{ShowMessage("寻找战场功能已关闭")}}function autoFight(){var j=0;function o(z){function t(K){K+="";var I=K.split(".");var J=/(\d{1,3})(?=(\d{3})+$)/g;return I[0].replace(J,"$1,")+(I.length==2?"."+I[1]:"")}var G=$("#showMsg");G.text("");G.show();var v=$("#DamageDone",z);if(v.length>0){var E=parseInt(v.text().replace(/,/g,"").replace(/\xA0/g,""));var H=$(".fightsprite",v.parent().parent());var A={bomb:["grey","无暴击(pain dealer)"],tank:["grey","无坦克(tank)"],syringe:["grey","无类固醇(steroid)"],airplane:["grey","无地点加成"],bookmark:["grey","无军令加成"]};var B={absorbed:["loved",["lightgreen","闪避(avoid)"]],mu:["bookmark",["lightgreen","有军令加成"]],location:["airplane",["lightgreen","有地点加成"]],STEROIDSplus:["syringe",["lightgreen","有类固醇(steroid)"]],STEROIDSminus:["syringe",["pink","类固醇副作用(steroid)"]],TANKplus:["tank",["lightgreen","有坦克(tank)"]],TANKminus:["tank",["pink","坦克副作用(tank)"]],xp1:["xp",1],xp5:["xp",5],PAIN_DEALER_1_Hplus:["bomb",["lightgreen","1小时暴击(pain dealer)"]],PAIN_DEALER_10_Hplus:["bomb",["lightgreen","10小时暴击(pain dealer)"]],PAIN_DEALER_25_Hplus:["bomb",["lightgreen","25小时暴击(pain dealer)"]]};for(var y=0;y<H.length;++y){var F=H.eq(y).attr("class").split(" ").pop();if(F in B){var u=B[F];A[u[0]]=u[1]}}var w="";var x=A.xp;delete A.xp;for(y in A){w='<i style="color:'+A[y][0]+';" class="icon-'+y+'" title="'+A[y][1]+'"></i>'+w}w+='<b title="'+x+'次攻击">x'+x+"</b>";var s=$("#fightHistory");var D=$("div[class^=foundation-style]",s);if(D.length===6){$("#ehHistoryExpand").show()}D.slice(0,2).attr("style","opacity:0.6;");D.slice(2,4).attr("style","opacity:0.3;");if($("#ehHistoryExpand").is(":hidden")===false){D.slice(4,6).hide()}var C=($("#fightResult>div").attr("class").split(" ").pop().indexOf("critical")!==-1);if(C){s.prepend($("<div>",{"class":"foundation-style small-6 columns foundation-text-right",html:w}),$("<div>",{"class":"foundation-style small-4 columns foundation-text-right critical",text:v.text()}))}else{s.prepend($("<div>",{"class":"foundation-style small-6 columns foundation-text-right",html:w}),$("<div>",{"class":"foundation-style small-4 columns foundation-text-right",text:v.text()}))}$("#ehHitsNumber").text(parseInt($("#ehHitsNumber").text())+x);$("#ehTotalDamage").text(t(parseInt($("#ehTotalDamage").text().replace(/,/g,"").replace(/\xA0/g,""))+E))}else{G.text($("#fightResponse").text().trim());G.fadeOut(2000)}}function l(){if((s_AF_MaxHitUsingWeapon<0)||(s_AF_HitUsingWeapon<s_AF_MaxHitUsingWeapon)){s_AF_HitUsingWeapon++;setValue("HitUsingWeapon",s_AF_HitUsingWeapon);if(s_FightWeaponQuality<=0){return 0}else{var s=parseInt($("#Q"+s_FightWeaponQuality+"WeaponStock").text());if((s<=0)||((s<=5)&&(s_AF_FightByHitOnly==false))){return 0}else{return s_FightWeaponQuality}}}else{return 0}}function c(t,w){var s=l();if(!(s>=0&&s<=5)){s=0}console.log("使用Q"+s+"，side="+t+"，value="+w);var u="weaponQuality="+s+"&battleRoundId="+$("#battleRoundId").val()+"&side="+t+"&value="+w;var v=$.ajax({type:"POST",url:"fight.html",timeout:s_AF_AjaxTimeout,data:u,success:function(A){$("#fightResponse > div").replaceWith(A);if($("#showMsg").length>0){o($(A))}var z=$("#healthUpdate",A).text();if(z!==""){var x=z.substr(0,z.length-3);if(x<100){$("#healthProgress div.ui-corner-right").removeClass("ui-corner-right")}$("#healthProgress .ui-progressbar-value").animate({width:x+"%"},{queue:false});$("#healthProgress").attr("title",x+" / 100");$("#actualHealth").html(x);var y=$("#DamageDone",A);if(y.length<0){console.log($("#fightResponse").text().trim());j++;if(j>s_AF_MaxWarningCounts){refreshingWhenCrashed()}}else{if(j>0){j=0}if(s_ErrorRefreshedCount>0){s_ErrorRefreshedCount=0;setValue("ErrorRefreshedCount",0)}}}else{j++;ShowMessage("攻击出错："+$("#fightResponse").text().trim()+"("+j+")");if(j>s_AF_MaxWarningCounts){refreshingWhenCrashed()}}},error:function(x,z,y){j++;if(z=="timeout"){ShowMessage("攻击出错：超时("+j+")")}else{ShowMessage("攻击出错：错误码"+x.status+"("+j+")")}if(j>s_AF_MaxWarningCounts){refreshingWhenCrashed()}return false}})}function n(){var u=$("#roundCountdown").children().text();var s=u.split(":");if(s.length==3){return(parseInt(s[0])*3600+parseInt(s[1])*60+parseInt(s[2]))}else{return -1}}function p(){if(s_AF_TournamentMode==true){var v=n();var t=getRandomInt((v+20)*1000,(v+120)*1000);ShowMessage("将于 "+getDateString(new Date(Date.now()+t))+" 刷新",1000000);setTimeout(function(){location.reload()},t)}else{var w;var u;if($("#minutesLimit").length>0){w=parseInt($("#minutesLimit").text().split(":")[0]);u=parseInt($("#secondsLimit").text())}else{if($("#limit_timer_time_text").length>0){var s=$("#limit_timer_time_text").text().split("m");if(s.length<=1){w=0;u=parseInt(s[0].substring(0,s[0].length-1))}else{w=parseInt(s[0]);u=parseInt(s[1].substring(0,s[1].length-1))}}}if((w<0)||isNaN(w)){w=0}if((u<0)||isNaN(u)){u=0}var t=getRandomInt((w*60+u+s_AF_NextRefreshExtendWaitMin)*1000,(w*60+u+s_AF_NextRefreshExtendWaitMax)*1000);ShowMessage("将于 "+getDateString(new Date(Date.now()+t))+" 刷新",1000000);setTimeout(function(){location.reload()},t)}}function m(t){if(s_EnableAutoFight==false){ShowMessage("打枪功能未启用或已暂停");return}var s;var u=parseFloat($("#actualHealth").html());if(u>=10){s=getRandomInt(s_AF_FightWaitMin,s_AF_FightWaitMax);if((u>=50)&&(s_AF_FightByHitOnly==false)){c(t,"Berserk");if(s_AF_TournamentMode==false){ShowMessage(s+"ms后连击");setTimeout(function(){m(t)},s)}else{setValue("HitUsingWeapon",0);p()}}else{c(t,"undefined");if(s_AF_TournamentMode==false){ShowMessage(s+"ms后单击");setTimeout(function(){m(t)},s)}else{setValue("HitUsingWeapon",0);p()}}}else{setValue("HitUsingWeapon",0);p()}}function b(){function s(P,Q){var O={};var M=0;var N=0;var R;if(Q==true){R=$("#topDefender"+P)}else{R=$("#topAttacker"+P)}if((R.length>0)&&(R.children().length>0)){M=R.children().children('a[href^="profile.html?id="]').attr("href").split("=")[1];N=parseInt(R.children().children(".hitInfl").text().replace(/,/g,""))}O.IsDefender=Q;O.Id=M;O.Damage=N;return O}function u(P,Q){var O={};var M=0;var N=0;var R;if(Q==true){R=$("#top10Defenders"+P)}else{R=$("#top10Attackers"+P)}if((R.length>0)&&(R.children().length>0)){M=R.children("div").children('a[href^="profile.html?id="]').attr("href").split("=")[1];N=parseInt(R.children("div").children(".hitInfl").text().replace(/,/g,""))}O.IsDefender=Q;O.Id=M;O.Damage=N;return O}function J(){var M=getRandomInt(0,2);if(M==0){ShowMessage("随机输出在 防守方");return"defender"}else{ShowMessage("随机输出在 进攻方");return"attacker"}}function y(M,N){if(M[0].Damage>N[0].Damage){ShowMessage("防守方第一位伤害较少，选择输出在 防守方");return"defender"}else{if(M[0].Damage<N[0].Damage){ShowMessage("进攻方第一位伤害较少，选择输出在 进攻方");return"attacker"}else{ShowMessage("双方第一位伤害相同或无人输出");return J()}}}function w(M,N){if(M[2].Damage>N[2].Damage){ShowMessage("防守方第三位伤害较少，选择输出在 防守方");return"defender"}else{if(M[2].Damage<N[2].Damage){ShowMessage("进攻方第三位伤害较少，选择输出在 进攻方");return"attacker"}else{ShowMessage("双方第三位伤害相同或无人输出");return y(M,N)}}}function E(M,N){if(M[9].Damage>N[9].Damage){ShowMessage("防守方第十位伤害较少，选择输出在 防守方");return"defender"}else{if(M[9].Damage<N[9].Damage){ShowMessage("进攻方第十位伤害较少，选择输出在 进攻方");return"attacker"}else{ShowMessage("双方第十位伤害相同或无人输出");return w(M,N)}}}var K;var C;if($(".xflagsBig").length>0){var x=new RegExp("-","g");K=$(".xflagsBig:first").attr("class").split(" ").pop();K=K.substring(K.indexOf("-")+1).replace(x," ");C=$(".xflagsBig:last").attr("class").split(" ").pop();C=C.substring(C.indexOf("-")+1).replace(x," ")}else{if($(".flags-big").length>0){K=$(".flags-big:first").attr("class").split(" ").pop();C=$(".flags-big:last").attr("class").split(" ").pop()}else{if($(".muAvatar").length>0){K=$(".alliesList.leftList.fightFont").text().trim();C=$(".alliesList.rightList.fightFont").text().trim()}else{K="未知";C="未知"}}}ShowMessage(K+" vs "+C);if((s_AF_FightForAlly==true)&&($.inArray(K,s_AF_Enemies)>=0)){ShowMessage(K+"是敌人，将为"+C+"输出");return"attacker"}else{if((s_AF_FightForAlly==true)&&($.inArray(C,s_AF_Enemies)>=0)){ShowMessage(C+"是敌人，将为"+K+"输出");return"defender"}else{if((s_AF_FightForAlly==true)&&($.inArray(K,s_AF_Allies)>=0)){ShowMessage(K+"是盟友，将为"+K+"输出");return"defender"}else{if((s_AF_FightForAlly==true)&&($.inArray(C,s_AF_Allies)>=0)){ShowMessage(C+"是盟友，将为"+C+"输出");return"attacker"}else{if(s_FightDefaultSide<0){return J()}if(s_FightDefaultSide==0){ShowMessage("设置输出在 防守方");return"defender"}else{if(s_FightDefaultSide==1){ShowMessage("设置输出在 进攻方");return"attacker"}else{if(s_FightDefaultSide>=2){var t=$("#userName").attr("href").split("=")[1];var A=[];var G=[];for(var I=1;I<=3;I++){A.push(s(I,false));G.push(s(I,true))}for(var H=4;H<=10;H++){A.push(u(H,false));G.push(u(H,true))}var z=10;var B=10;for(var F=0;F<10;F++){if(t==A[F].Id){B=F;break}}for(var D=0;D<10;D++){if(t==G[D].Id){z=D;break}}if(z<B){ShowMessage("你在防守方输出为第"+(z+1)+"位，选择输出在 防守方");return"defender"}else{if(z>B){ShowMessage("你在进攻方输出为第"+(B+1)+"位，选择输出在 进攻方");return"attacker"}else{if(z<10){if(A[z].Damage<G[z].Damage){ShowMessage("你在双方输出均为第"+(z+1)+"位，但在防守方伤害较高，选择输出在 防守方");return"defender"}else{if(A[z].Damage>G[z].Damage){ShowMessage("你在双方输出均为第"+(z+1)+"位，但在进攻方伤害较高，选择输出在 进攻方");return"attacker"}else{ShowMessage("你在双方输出均为第"+(z+1)+"位，且伤害相同");return J()}}}else{if(s_FightDefaultSide==2){return y(A,G)}else{if(s_FightDefaultSide==3){return w(A,G)}else{if(s_FightDefaultSide==4){return E(A,G)}else{if(s_FightDefaultSide==5){return J()}else{if(s_FightDefaultSide==6){var v=$('img[src$="red_ball.png"]').length;var L=$('img[src$="blue_ball.png"]').length;if(v>L){ShowMessage("防守方获胜回合数较少，选择输出在 防守方");return"defender"}else{if(v<L){ShowMessage("进攻方获胜回合数较少，选择输出在 进攻方");return"attacker"}else{ShowMessage("双方获胜回合数相同");return J()}}}else{return J()}}}}}}}}}else{return J()}}}}}}}}function q(){if(s_IsWorkingTraining==true){ShowMessage("等待跳转到工作页");return}if(getUrlPage()=="battle"){j=0;if($(".testDivred").length>0){ShowMessage("该战场被冻结");searchBattle();return}else{if($("#fightButton2").length>0){m(b())}else{if($("#fightButton1").length>0){m("side")}else{searchBattle();return}}}}else{searchBattle();return}}if(getUrlPage()=="battle"){if(s_AF_CancelDateTime>0){if(Date.now()>s_AF_CancelDateTime){ShowMessage("超过设定时间，关闭自动清体",1000000);return}else{ShowMessage("即将在"+getDateString(new Date(s_AF_CancelDateTime))+"停止自动清体功能")}}if(s_AF_SleepProbability>0){var r=getRandomInt(0,100);if(s_AF_SleepProbability>r){ShowMessage("因为概率设置，本次不会清体("+r+"<"+s_AF_SleepProbability+")");p();return}}if(s_AFC_TargetBattleID==parseInt($('a[href^="battleStatistics.html?id="]').attr("href").replace("battleStatistics.html?id=",""))){if(s_AFC_TiggerProbability>0){var i=getRandomInt(0,100);if(s_AFC_TiggerProbability>i){var e=n();var d;var h;if($("#minutesLimit").length>0){d=parseInt($("#minutesLimit").text().split(":")[0]);h=parseInt($("#secondsLimit").text())}else{if($("#limit_timer_time_text").length>0){var k=$("#limit_timer_time_text").text().split("m");if(k.length<=1){d=0;h=parseInt(k[0].substring(0,k[0].length-1))}else{d=parseInt(k[0]);h=parseInt(k[1].substring(0,k[1].length-1))}}}if((d<0)||isNaN(d)){d=0}if((h<0)||isNaN(h)){h=0}var a=e-(d*60+h);if((e>0)&&(a<0)&&(e<s_AFC_BattleTimeLeftTigger*60)){s_FightWeaponQuality=s_AFC_FightWeaponQuality;s_AF_FightByHitOnly=s_AFC_FightByHitOnly;s_AF_FightWaitMin=s_AFC_FightWaitMin;s_AF_FightWaitMax=s_AFC_FightWaitMax;var f=getRandomInt(s_AFC_RefreshInTimeLeftMin,s_AFC_RefreshInTimeLeftMax);var g=(e-f)*1000;ShowMessage("该场为重要战场，将于 S"+f+" 压秒",1000000);setTimeout(function(){q()},g);return}else{ShowMessage("该场为重要战场，程序将在回合最后"+s_AFC_BattleTimeLeftTigger+"分钟进行判断");q();return}}else{ShowMessage("虽然该场为重要战场，但因为概率设置("+i+"<"+s_AFC_TiggerProbability+")，本次不进行压秒判断");q();return}}else{ShowMessage("虽然该场为重要战场，但是压秒概率为0，将忽略压秒设置");q();return}}else{q();return}}else{ShowMessage("非战场页面");q();return}};